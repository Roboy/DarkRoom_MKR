/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8-dev at Wed Nov 23 22:18:01 2016. */

#ifndef PB_MKR1000_LIGHTHOUSE_LIGHTHOUSE_SENSOR_PB_H_INCLUDED
#define PB_MKR1000_LIGHTHOUSE_LIGHTHOUSE_SENSOR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _mkr1000_lighthouse_configObject {
    pb_callback_t ip;
    bool has_port;
    int32_t port;
    bool has_id;
    int32_t id;
/* @@protoc_insertion_point(struct:mkr1000_lighthouse_configObject) */
} mkr1000_lighthouse_configObject;

typedef struct _mkr1000_lighthouse_trackedObject_Sensor {
    bool has_id;
    int32_t id;
    pb_size_t timestamp_count;
    int32_t timestamp[20];
    pb_size_t angles_h_count;
    float angles_h[20];
    pb_size_t angles_v_count;
    float angles_v[20];
/* @@protoc_insertion_point(struct:mkr1000_lighthouse_trackedObject_Sensor) */
} mkr1000_lighthouse_trackedObject_Sensor;

typedef struct _mkr1000_lighthouse_trackedObject {
    pb_size_t s_count;
    mkr1000_lighthouse_trackedObject_Sensor s[3];
/* @@protoc_insertion_point(struct:mkr1000_lighthouse_trackedObject) */
} mkr1000_lighthouse_trackedObject;

/* Default values for struct fields */

/* Initializer values for message structs */
#define mkr1000_lighthouse_configObject_init_default {{{NULL}, NULL}, false, 0, false, 0}
#define mkr1000_lighthouse_trackedObject_init_default {0, {mkr1000_lighthouse_trackedObject_Sensor_init_default, mkr1000_lighthouse_trackedObject_Sensor_init_default, mkr1000_lighthouse_trackedObject_Sensor_init_default}}
#define mkr1000_lighthouse_trackedObject_Sensor_init_default {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define mkr1000_lighthouse_configObject_init_zero {{{NULL}, NULL}, false, 0, false, 0}
#define mkr1000_lighthouse_trackedObject_init_zero {0, {mkr1000_lighthouse_trackedObject_Sensor_init_zero, mkr1000_lighthouse_trackedObject_Sensor_init_zero, mkr1000_lighthouse_trackedObject_Sensor_init_zero}}
#define mkr1000_lighthouse_trackedObject_Sensor_init_zero {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define mkr1000_lighthouse_configObject_ip_tag   1
#define mkr1000_lighthouse_configObject_port_tag 2
#define mkr1000_lighthouse_configObject_id_tag   3
#define mkr1000_lighthouse_trackedObject_Sensor_id_tag 1
#define mkr1000_lighthouse_trackedObject_Sensor_timestamp_tag 2
#define mkr1000_lighthouse_trackedObject_Sensor_angles_h_tag 3
#define mkr1000_lighthouse_trackedObject_Sensor_angles_v_tag 4
#define mkr1000_lighthouse_trackedObject_s_tag   1

/* Struct field encoding specification for nanopb */
extern const pb_field_t mkr1000_lighthouse_configObject_fields[4];
extern const pb_field_t mkr1000_lighthouse_trackedObject_fields[2];
extern const pb_field_t mkr1000_lighthouse_trackedObject_Sensor_fields[5];

/* Maximum encoded size of messages (where known) */
/* mkr1000_lighthouse_configObject_size depends on runtime parameters */
#define mkr1000_lighthouse_trackedObject_size    1302
#define mkr1000_lighthouse_trackedObject_Sensor_size 431

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LIGHTHOUSE_SENSOR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
